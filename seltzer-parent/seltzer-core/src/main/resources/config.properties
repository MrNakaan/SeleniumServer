# Times follow the specification below and spaces are allowed between numbers and units (this is a future feature)
#
# Time specification:
# n = nanosecond
# u = microsecond
# m = millisecond
# s = second
# M = minute
# h = hour
# d = day
# The time `1h` is equivalent to `1000m59s59M`

seltzer.path=~/
seltzer.headless.enabled=true
seltzer.headless.locked=false
seltzer.threads=2
seltzer.maxThreads=8
seltzer.threadKeepAlive=1h

session.inactive=30M
session.neverUsed=15M
session.cleanup=5M

# Cache sizes of 0 are considered infinite, though infinite production caches aren't likely a good idea
# Cache check modes:
#   smart: check only cache elements that are referenced by the current command or that could very likely be invalidated
#   full: check all cache elements on every command
#   none: never check cache elements; will very likely result in more exception responses
# Cache clear strategies determine how to handle new items being added when the cache has no free slots:
#   fifo: first in first out; invalidate the oldest element(s)
#   lifo: last in first out; invalidate the newest element(s)
#   lastused: invalidate the last-used item (based on timestamps)
#   none: don't free up slots; returns a failure response
session.cache.webelement.enabled=true
session.cache.webelement.size=0
session.cache.webelement.checkmode=smart
session.cache.webelement.clearstrategy=lastused

connection.port=39948
connection.backlog=4

ssl.enabled=false
ssl.port=40043
ssl.protocol=TLSv1.2
ssl.keystore.file=seltzer.jks
ssl.keystore.password=password
ssl.keystore.password.ask=true
ssl.keystore.keymanager.algorithm=SunX509
ssl.keystore.trustmanager.algorithm=SunX509
